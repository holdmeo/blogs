// ==UserScript==
// @name         Tubi直播双字幕 - 修复隐藏逻辑
// @namespace    http://tampermonkey.net/
// @version      0.9
// @description  提取动态字幕，隐藏原有样式并显示双字幕（原文 + 翻译）。
// @author       YourName
// @match        https://tubitv.com/*
// @grant        GM_addStyle
// @grant        GM_xmlhttpRequest
// @run-at       document-end
// @connect      translate.googleapis.com
// ==/UserScript==

(function () {
    'use strict';

    let lastOriginalText = ''; // 缓存上一次的完整字幕内容

    // 隐藏原字幕的背景和颜色（保留 DOM 元素，方便提取内容）
    GM_addStyle(`
        .dynamicSubtitles .tubi-text-track-cue {
            background: none !important;
            color: transparent !important; /* 隐藏原字幕 */
        }
    `);

    // 初始化字幕监听器
    function observeSubtitles() {
        // 定位字幕容器
        const subtitleContainer = document.querySelector('.dynamicSubtitles');
        if (!subtitleContainer) {
            console.log('未找到字幕容器，等待加载...');
            setTimeout(observeSubtitles, 1000); // 每隔 1 秒重试
            return;
        }

        console.log('字幕容器已找到:', subtitleContainer);

        // 创建 MutationObserver，监听字幕内容变化
        const observer = new MutationObserver(() => {
            const subtitleElements = subtitleContainer.querySelectorAll('.tubi-text-track-cue');
			console.log('监听字幕内容变化',subtitleElements);
            if (subtitleElements.length > 0) {
                // 提取所有字幕内容，并拼接成完整句子
                let originalText = Array.from(subtitleElements)
                    .map(el => el.innerText.trim())
                    .join(' ');
                
                if (originalText && originalText !== lastOriginalText) {
                    lastOriginalText = originalText; // 更新缓存
                    translateAndRender(originalText);
                }
            }
        });

        observer.observe(subtitleContainer, { childList: true, subtree: true });
        console.log('字幕监听器已启动');
    }

    // 调用 Google 翻译 API 翻译字幕
    function translateText(text, callback) {
        const apiUrl = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=auto&tl=zh-CN&dt=t&q=${encodeURIComponent(text)}`;
        GM_xmlhttpRequest({
            method: "GET",
            url: apiUrl,
            onload: function (response) {
                try {
                    const result = JSON.parse(response.responseText);
                    const translatedText = result[0]?.[0]?.[0];
                    callback(translatedText);
                } catch (e) {
                    console.error('翻译失败:', e);
                    callback('');
                }
            }
        });
    }

    // 渲染双字幕
    function translateAndRender(originalText) {
        // 获取视频播放器容器
        const videoPlayer = document.querySelector('.mj2k9');
        if (!videoPlayer) return;

        // 检查并清理旧的双字幕容器
        let dualSubtitleContainer = document.querySelector('#dualSubtitleContainer');
        if (!dualSubtitleContainer) {
            dualSubtitleContainer = document.createElement('div');
            dualSubtitleContainer.id = 'dualSubtitleContainer';
            dualSubtitleContainer.style.position = 'absolute';
            dualSubtitleContainer.style.bottom = '10%'; // 固定在视频底部
            dualSubtitleContainer.style.width = '100%';
            dualSubtitleContainer.style.textAlign = 'center';
            dualSubtitleContainer.style.pointerEvents = 'none'; // 防止影响视频操作
            videoPlayer.appendChild(dualSubtitleContainer);
        }

        // 调用翻译 API
        translateText(originalText, (translatedText) => {
            if (!translatedText) return;

            // 设置双字幕内容（原文 + 翻译）
            dualSubtitleContainer.innerHTML = `
                <div style="font-size: 18px; font-family: Arial, sans-serif; color: white; text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.7);">
                    ${originalText}
                </div>
                <div style="font-size: 16px; font-family: Arial, sans-serif; color: yellow; text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.7); margin-top: 5px;">
                    ${translatedText}
                </div>
            `;
        });
    }

    // 启动脚本
    observeSubtitles();
})();